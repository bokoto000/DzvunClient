{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _deepEqual = require('deep-equal');\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _lodash = require('lodash.omit');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _SwiperLib = require('./SwiperLib');\n\nvar _SwiperLib2 = _interopRequireDefault(_SwiperLib);\n\nvar _Slide = require('./Slide');\n\nvar _Slide2 = _interopRequireDefault(_Slide);\n\nvar _swiperEvents = require('./swiperEvents');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar FuncElementType = _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]);\n\nvar BoolOrFuncElementType = _propTypes2.default.oneOfType([_propTypes2.default.bool, FuncElementType]);\n\nvar Swiper = function (_Component) {\n  _inherits(Swiper, _Component);\n\n  function Swiper() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Swiper);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Swiper.__proto__ || Object.getPrototypeOf(Swiper)).call.apply(_ref, [this].concat(args))), _this), _this._swiper = null, _this._nextButton = null, _this._prevButton = null, _this._pagination = null, _this._scrollBar = null, _this._container = null, _this._slidesCount = 0, _this._activeIndex = 0, _this.state = {\n      swiper: null,\n      duplicates: []\n      /**\n       * Initialize Swiper instance.\n       * @private\n       */\n\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * Keep a reference of the `_swiper` in state so we can re-render when\n   * it changes.\n   */\n\n\n  _createClass(Swiper, [{\n    key: '_initSwiper',\n    value: function _initSwiper() {\n      var _this2 = this;\n\n      var _props = this.props,\n          swiperOptions = _props.swiperOptions,\n          navigation = _props.navigation,\n          pagination = _props.pagination,\n          scrollBar = _props.scrollBar,\n          onInitSwiper = _props.onInitSwiper,\n          loop = _props.loop;\n      var opts = {};\n\n      if (pagination) {\n        opts.pagination = opts.pagination || {};\n\n        _extends(opts.pagination, {\n          el: this._pagination\n        });\n      }\n\n      if (scrollBar) {\n        opts.scrollbar = opts.scrollbar || {};\n\n        _extends(opts.scrollbar, {\n          el: this._scrollBar\n        });\n      }\n\n      if (navigation) {\n        opts.navigation = opts.navigation || {};\n\n        _extends(opts.navigation, {\n          prevEl: this._prevButton,\n          nextEl: this._nextButton\n        });\n      }\n\n      if (loop) {\n        opts.loop = true;\n      } else {\n        if (opts.loop) {\n          throw new Error('react-dynamic-swiper: Do not use \"loop\" on the \"swiperOptions\", ' + 'use the \"loop\" prop on the Swiper component directly.');\n        }\n      }\n\n      this._swiper = new _SwiperLib2.default(this._container, _extends(opts, swiperOptions));\n\n      this._swiper.on('slideChange', function () {\n        _this2._activeIndex = _this2._swiper.activeIndex;\n\n        var activeSlide = _this2._getSlideChildren()[_this2._swiper.activeIndex];\n\n        if (activeSlide && activeSlide.props.onActive) {\n          activeSlide.props.onActive(_this2._swiper);\n        }\n      });\n\n      if (this._activeIndex) {\n        var index = Math.min(this._activeIndex, this._getSlideChildren().length - 1);\n\n        this._swiper.slideTo(index, 0, false);\n      }\n\n      this._delegateSwiperEvents();\n\n      this._createDuplicates();\n\n      this.setState({\n        swiper: this._swiper\n      });\n      onInitSwiper(this._swiper);\n    }\n    /**\n     * Delegates all swiper events to event handlers passed in props.\n     * @private\n     */\n\n  }, {\n    key: '_delegateSwiperEvents',\n    value: function _delegateSwiperEvents() {\n      var _this3 = this;\n\n      _swiperEvents.events.forEach(function (event) {\n        _this3._swiper.on(event, function () {\n          if (this.props[event] && typeof this.props[event] === 'function') {\n            this.props[event].apply(null, arguments);\n          }\n        }.bind(_this3));\n      });\n    }\n    /**\n     * Filter out non-Slide children.\n     * @private\n     * @param {?Array<Element>} Children Child elements, if omitted uses own children.\n     * @return {Array}\n     */\n\n  }, {\n    key: '_getSlideChildren',\n    value: function _getSlideChildren(children) {\n      children = children || this.props.children;\n      return _react.Children.toArray(children).filter(function (child) {\n        return child.type && child.type._isReactDynamicSwiperSlide;\n      });\n    }\n    /**\n     * Render an optional element. If predicate is false returns `null`, if true\n     * renders a cloned `node` (if truthy), or a `div` with the given `className`.\n     * @private\n     * @param  {Boolean}  predicate Should render?\n     * @param  {String}   className Classname for `div`\n     * @param  {Function} refFn     Function for `ref` of cloned `node` or `div`\n     * @param  {Element|Function}  node      Optional element. If `node` is a\n     *                                       function, `swiper` instance will be\n     *                                       passed as an argument.\n     * @return {Element}\n     */\n\n  }, {\n    key: '_renderOptional',\n    value: function _renderOptional(predicate, className, refFn, node) {\n      if (!predicate) return null;\n\n      if (node) {\n        var _node = typeof node === 'function' ? node(this.state.swiper) : node;\n\n        return _react2.default.cloneElement(_node, {\n          ref: refFn\n        });\n      }\n\n      return _react2.default.createElement('div', {\n        className: className,\n        ref: refFn\n      });\n    }\n    /**\n     * Determines whether `swiper` should be re-initialized, or not, based on\n     * `prevProps`.\n     * @private\n     * @param  {Object} prevProps Previous props.\n     * @return {Boolean}\n     */\n\n  }, {\n    key: '_shouldReInitialize',\n    value: function _shouldReInitialize(prevProps) {\n      return !(0, _deepEqual2.default)(prevProps.swiperOptions, this.props.swiperOptions) || prevProps.navigation !== this.props.navigation || prevProps.nextButton !== this.props.nextButton || prevProps.prevButton !== this.props.prevButton || prevProps.pagination !== this.props.pagination || prevProps.scrollBar !== this.props.scrollBar || prevProps.loop !== this.props.loop;\n    }\n    /**\n     * Get props\n     * @param {Object} props Props to filter\n     * @return {Object}\n     */\n\n  }, {\n    key: '_getNormProps',\n    value: function _getNormProps(props) {\n      return (0, _lodash2.default)(props, _swiperEvents.events.concat(['containerClassName', 'wrapperClassName', 'swiperOptions', 'navigation', 'prevButton', 'nextButton', 'pagination', 'scrollBar', 'onInitSwiper']));\n    }\n  }, {\n    key: '_reInit',\n    value: function _reInit() {\n      this._swiper.destroy(true, true);\n\n      this._initSwiper();\n    }\n  }, {\n    key: '_renderDuplicates',\n    value: function _renderDuplicates() {\n      var slides = this._getSlideChildren();\n\n      return this.state.duplicates.map(function (portal) {\n        return (0, _reactDom.createPortal)((0, _react.cloneElement)(slides[portal.index], {\n          isPortaled: true\n        }), portal.container);\n      });\n    }\n  }, {\n    key: '_createDuplicates',\n    value: function _createDuplicates() {\n      if (this.props.loop) {\n        // @see: https://github.com/nolimits4web/swiper/blob/master/src/components/core/loop/loopCreate.js\n        var slideDuplicateClass = this._swiper.params.slideDuplicateClass;\n        var duplicates = [].slice.call(this._container.querySelectorAll('.' + slideDuplicateClass)).map(function (dupe) {\n          // NOTE: When iDangerous-Swiper creates the duplicates it deeply clones\n          // the nodes. Thus, before rendering the portals we must clear the\n          // content. Dirty, but I do not see another possible way.\n          dupe.innerHTML = '';\n          return {\n            container: dupe,\n            // @see: https://github.com/nolimits4web/swiper/blob/master/src/components/core/loop/loopCreate.js#L37\n            index: parseInt(dupe.getAttribute('data-swiper-slide-index'), 10)\n          };\n        });\n        this.setState({\n          duplicates: duplicates\n        });\n      }\n    }\n    /**\n     * Access internal Swiper instance.\n     * @return {Swiper}\n     */\n\n  }, {\n    key: 'swiper',\n    value: function swiper() {\n      return this._swiper;\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._initSwiper();\n\n      this._slidesCount = this._getSlideChildren().length;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._swiper.destroy();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var shouldReInitialize = this._shouldReInitialize(prevProps);\n\n      var nextSlidesCount = this._getSlideChildren().length;\n\n      var oldSlidesCount = this._slidesCount;\n      this._slidesCount = nextSlidesCount;\n\n      if (shouldReInitialize) {\n        // NOTE: When in loop mode, the slide indexes are actually different. The\n        // 0th index is actually the first duplicate, thus it is essentially like\n        // a 1-based index mode (the old 0th is the 1st, so on and so forth). Thus,\n        // to account for this upon re-initialization, increment the current\n        // `_activeIndex` if going into a loop mode, and decrement if going out\n        // of a loop mode.\n        if (prevProps.loop !== this.props.loop) {\n          this._activeIndex += this.props.loop ? 1 : -1;\n        }\n\n        return this._reInit();\n      }\n\n      if (nextSlidesCount !== oldSlidesCount) {\n        // NOTE: `swiper.update()` doesn't seem to work when updating slides in\n        // loop mode. If so, is this a bug in iDangerous Swiper, or is this our\n        // only option?\n        if (this.props.loop) {\n          return this._reInit();\n        }\n\n        var index = Math.min(this._swiper.activeIndex, nextSlidesCount - 1);\n\n        this._swiper.update();\n\n        this._slidesCount = nextSlidesCount;\n\n        this._swiper.slideTo(index, 0, false);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props2 = this.props,\n          pagination = _props2.pagination,\n          navigation = _props2.navigation,\n          prevButton = _props2.prevButton,\n          nextButton = _props2.nextButton,\n          scrollBar = _props2.scrollBar,\n          wrapperClassName = _props2.wrapperClassName,\n          containerClassName = _props2.containerClassName,\n          rest = _objectWithoutProperties(_props2, ['pagination', 'navigation', 'prevButton', 'nextButton', 'scrollBar', 'wrapperClassName', 'containerClassName']);\n\n      return _react2.default.createElement('div', this._getNormProps(rest), _react2.default.createElement('div', {\n        className: (0, _classnames2.default)('swiper-container', containerClassName),\n        ref: function ref(node) {\n          _this4._container = node;\n        }\n      }, _react2.default.createElement('div', {\n        className: (0, _classnames2.default)('swiper-wrapper', wrapperClassName)\n      }, this._getSlideChildren()), this._renderOptional(pagination, 'swiper-pagination', function (node) {\n        _this4._pagination = node;\n      }, typeof pagination === 'boolean' ? false : pagination), this._renderOptional(navigation, 'swiper-button-prev', function (node) {\n        _this4._prevButton = node;\n      }, prevButton), this._renderOptional(navigation, 'swiper-button-next', function (node) {\n        _this4._nextButton = node;\n      }, nextButton), this._renderOptional(scrollBar, 'swiper-scrollbar', function (node) {\n        _this4._scrollBar = node;\n      }, typeof scrollBar === 'boolean' ? false : scrollBar), this._renderDuplicates()));\n    }\n  }]);\n\n  return Swiper;\n}(_react.Component);\n\nSwiper.propTypes = _extends({\n  containerClassName: _propTypes2.default.string,\n  wrapperClassName: _propTypes2.default.string,\n  swiperOptions: _propTypes2.default.object,\n  navigation: _propTypes2.default.bool,\n  prevButton: FuncElementType,\n  nextButton: FuncElementType,\n  pagination: BoolOrFuncElementType,\n  scrollBar: BoolOrFuncElementType,\n  loop: _propTypes2.default.bool,\n  onInitSwiper: _propTypes2.default.func\n}, _swiperEvents.EventPropTypes);\nSwiper.defaultProps = {\n  swiperOptions: {},\n  navigation: true,\n  pagination: true,\n  scrollBar: false,\n  loop: false,\n  onInitSwiper: function onInitSwiper() {}\n};\nexports.default = Swiper;","map":null,"metadata":{},"sourceType":"script"}